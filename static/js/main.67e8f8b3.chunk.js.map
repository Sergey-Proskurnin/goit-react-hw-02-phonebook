{"version":3,"sources":["components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ElementContactList/ElementContactList.js","components/ContactList/ContactList.js","App.js","index.js"],"names":["ContactForm","state","name","number","nameInputId","uuidv4","numberInputId","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","htmlFor","className","type","onChange","pattern","title","required","id","Component","filterInputId","Filter","filter","onChangeFilter","ElementContactList","contacts","deleteContact","map","onClick","ContactList","App","contactsTest","formAddContact","contact","some","toLowerCase","alert","contactId","prevState","changeFilter","getVisibleContacts","normalizedFilter","includes","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.67e8f8b3.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n  nameInputId = uuidv4();\r\n  numberInputId = uuidv4();\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <label htmlFor={this.nameInputId} className=\"lable\">\r\n            Name\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={name}\r\n              onChange={this.handleChange}\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n              id={this.nameInputId}\r\n            />\r\n          </label>\r\n\r\n          <label htmlFor={this.numberInputId} className=\"lable\">\r\n            Number\r\n            <input\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              value={number}\r\n              onChange={this.handleChange}\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n              required\r\n              id={this.numberInputId}\r\n            />\r\n          </label>\r\n\r\n          <button type=\"submit\">Add contact</button>\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import React from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst filterInputId = uuidv4();\r\n\r\nconst Filter = ({ filter, onChangeFilter }) => {\r\n  return (\r\n    <label htmlFor={filterInputId}>\r\n      Find contacts by name and number\r\n      <input\r\n        type=\"text\"\r\n        value={filter}\r\n        onChange={onChangeFilter}\r\n        id={filterInputId}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\n\r\nconst ElementContactList = ({ contacts, deleteContact }) => {\r\n  return contacts.map(({ name, number, id }) => {\r\n    return (\r\n      <li key={id}>\r\n        {name}: {number}\r\n        <button\r\n          type=\"button\"\r\n          className=\"btnList\"\r\n          onClick={() => deleteContact(id)}\r\n        >\r\n          Delete\r\n        </button>\r\n      </li>\r\n    );\r\n  });\r\n};\r\n\r\nexport default ElementContactList;\r\n","import React from \"react\";\r\n\r\nimport ElementContactList from \"components/ElementContactList\";\r\n\r\nconst ContactList = ({ contacts, deleteContact }) => {\r\n  return (\r\n    <ul>\r\n      <ElementContactList contacts={contacts} deleteContact={deleteContact}/>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport ContactForm from \"components/ContactForm\";\nimport Filter from \"components/Filter\";\nimport ContactList from \"components/ContactList\";\nimport contactsTest from \"data/contactsTest.json\";\n\nclass App extends Component {\n  state = {\n    contacts: contactsTest,\n    filter: \"\",\n  };\n\n  formAddContact = ({ name, number }) => {\n    const { contacts } = this.state;\n    const contact = {\n      name: name,\n      number: number,\n      id: uuidv4(),\n    };\n    contacts.some(\n      ({ name }) => name.toLowerCase() === contact.name.toLowerCase()\n    )\n      ? alert(`${name} is already in contacts`)\n      : contacts.some(({ number }) => number === contact.number)\n      ? alert(`${number} is already in contacts`)\n      : this.setState(({ contacts }) => ({ contacts: [contact, ...contacts] }));\n  };\n\n  deleteContact = (contactId) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter(({ id }) => id !== contactId),\n    }));\n  };\n\n  changeFilter = (e) => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getVisibleContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(\n      (contact) =>\n        contact.name.toLowerCase().includes(normalizedFilter) ||\n        contact.number.includes(filter)\n    );\n  };\n\n  render() {\n    const { filter } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <>\n        <h1 className=\"title\">Phonebook</h1>\n        <ContactForm onSubmit={this.formAddContact} />\n\n        <h2 className=\"title\">Contacts</h2>\n        <Filter filter={filter} onChangeFilter={this.changeFilter} />\n        <ContactList\n          contacts={visibleContacts}\n          deleteContact={this.deleteContact}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}