{"version":3,"sources":["App.js","index.js"],"names":["App","state","contacts","name","number","filter","nameInputId","uuidv4","numberInputId","filterInputId","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","contact","id","push","reset","changeFilter","getVisibleContacts","normalizedFilter","toLowerCase","includes","this","visibleContacts","className","onSubmit","htmlFor","type","onChange","pattern","title","required","map","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sSA0HeA,E,4MArHbC,MAAQ,CACNC,SAAU,GAMVC,KAAM,GACNC,OAAQ,GACRC,OAAQ,I,EAGVC,YAAcC,c,EACdC,cAAgBD,c,EAChBE,cAAgBF,c,EAEhBG,aAAe,SAACC,GACd,MAAwBA,EAAEC,cAAlBT,EAAR,EAAQA,KAAMU,EAAd,EAAcA,MACd,EAAKC,SAAL,eAAiBX,EAAOU,K,EAG1BE,aAAe,SAACJ,GACdA,EAAEK,iBAEF,MAAmC,EAAKf,MAAhCE,EAAR,EAAQA,KAAMC,EAAd,EAAcA,OAAQF,EAAtB,EAAsBA,SAChBe,EAAU,CACdd,KAAMA,EACNC,OAAQA,EACRc,GAAIX,eAENL,EAASiB,KAAKF,GACd,EAAKG,S,EAGPC,aAAe,SAACV,GACd,EAAKG,SAAS,CAAET,OAAQM,EAAEC,cAAcC,S,EAG1CS,mBAAqB,WACnB,MAA6B,EAAKrB,MAA1BI,EAAR,EAAQA,OAAQH,EAAhB,EAAgBA,SACVqB,EAAmBlB,EAAOmB,cAEhC,OAAOtB,EAASG,QACd,SAACY,GAAD,OACEA,EAAQd,KAAKqB,cAAcC,SAASF,IACpCN,EAAQb,OAAOqB,SAASpB,O,EAI9Be,MAAQ,WACN,EAAKN,SAAS,CAAEX,KAAM,GAAIC,OAAQ,M,4CAGpC,WACE,MAAiCsB,KAAKzB,MAA9BE,EAAR,EAAQA,KAAMC,EAAd,EAAcA,OAAQC,EAAtB,EAAsBA,OAChBsB,EAAkBD,KAAKJ,qBAE7B,OACE,qCACE,oBAAIM,UAAU,QAAd,uBACA,uBAAMC,SAAUH,KAAKX,aAArB,UACE,wBAAOe,QAASJ,KAAKpB,YAAasB,UAAU,QAA5C,iBAEE,uBACEG,KAAK,OACL5B,KAAK,OACLU,MAAOV,EACP6B,SAAUN,KAAKhB,aACfuB,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRjB,GAAIQ,KAAKpB,iBAIb,wBAAOwB,QAASJ,KAAKlB,cAAeoB,UAAU,QAA9C,mBAEE,uBACEG,KAAK,MACL5B,KAAK,SACLU,MAAOT,EACP4B,SAAUN,KAAKhB,aACfuB,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRjB,GAAIQ,KAAKlB,mBAIb,wBAAQuB,KAAK,SAAb,4BAGF,wBAAOD,QAASJ,KAAKjB,cAArB,6FAEE,uBACEsB,KAAK,OACLlB,MAAOR,EACP2B,SAAUN,KAAKL,aACfH,GAAIQ,KAAKjB,mBAIb,oBAAImB,UAAU,QAAd,sBACA,6BACGD,EAAgBS,KAAI,YAA2B,IAAxBjC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,OAAQc,EAAS,EAATA,GACpC,OACE,+BACGf,EADH,KACWC,IADFc,e,GA3GLmB,aCElBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.9d07e754.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      // {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n      // {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n      // {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n      // {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\n    ],\n    name: \"\",\n    number: \"\",\n    filter: \"\",\n  };\n\n  nameInputId = uuidv4();\n  numberInputId = uuidv4();\n  filterInputId = uuidv4();\n\n  handleChange = (e) => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    const { name, number, contacts } = this.state;\n    const contact = {\n      name: name,\n      number: number,\n      id: uuidv4(),\n    };\n    contacts.push(contact);\n    this.reset();\n  };\n\n  changeFilter = (e) => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getVisibleContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(\n      (contact) =>\n        contact.name.toLowerCase().includes(normalizedFilter) ||\n        contact.number.includes(filter)\n    );\n  };\n\n  reset = () => {\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  render() {\n    const { name, number, filter } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <>\n        <h2 className=\"title\">Phonebook</h2>\n        <form onSubmit={this.handleSubmit}>\n          <label htmlFor={this.nameInputId} className=\"lable\">\n            Name\n            <input\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              onChange={this.handleChange}\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n              required\n              id={this.nameInputId}\n            />\n          </label>\n\n          <label htmlFor={this.numberInputId} className=\"lable\">\n            Number\n            <input\n              type=\"tel\"\n              name=\"number\"\n              value={number}\n              onChange={this.handleChange}\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n              required\n              id={this.numberInputId}\n            />\n          </label>\n\n          <button type=\"submit\">Add contact</button>\n        </form>\n\n        <label htmlFor={this.filterInputId}>\n          Фильтр по имени\n          <input\n            type=\"text\"\n            value={filter}\n            onChange={this.changeFilter}\n            id={this.filterInputId}\n          />\n        </label>\n\n        <h2 className=\"title\">Contacts</h2>\n        <ul>\n          {visibleContacts.map(({ name, number, id }) => {\n            return (\n              <li key={id}>\n                {name}: {number}\n              </li>\n            );\n          })}\n        </ul>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}